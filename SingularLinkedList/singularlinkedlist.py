# -*- coding: utf-8 -*-
"""SingularLinkedlist.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14ZTfGuX2jqkx6-qj_mJIbLuTrjpRshul
"""

class Node:
  next = None
  data = None

class SLinkedList:
  def __init__(self):
    self.head = None
    self.tail = None

  def add(self,data):
    lists = Node()
    lists.data = data
    if self.head == None:
      self.head = lists
      self.tail = lists
    else :
      lastList = self.tail
      self.tail = lists
      lastList.next = lists

  def delete(self,data):
    """delete first data that match"""
    temp = self.head
    if self.head.data == data:
      self.head = self.head.next
      print("data {} has been removed".format(data))
      return
    pointerBefore = self.head
    pointerCurrent = self.head.next  
    while pointerCurrent != None:
      if pointerCurrent.data == data:
        if pointerCurrent.data == self.tail.data:
          self.tail = pointerBefore
        pointerBefore.next = pointerCurrent.next
        print("data {} has been removed".format(data))
        return
      pointerBefore = pointerCurrent
      pointerCurrent = pointerCurrent.next

    print("There is no data {} in list, use method prints to see the list".format(data))

  def prints(self):
    temp = self.head
    while temp != None:
      print(temp.data)
      temp = temp.next

singular = SLinkedList()
singular.add(1)

singular.add(2)

singular.add(3)

singular.add(4)

singular.prints()

singular.delete(3)

singular.prints()

singular.delete(5)

singular.prints()

singular.delete(1)

singular.prints()

singular.head.data

singular.tail.data

singular.delete(4)

singular.prints()

singular.head.data

singular.tail.data